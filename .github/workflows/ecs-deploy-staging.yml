name: Deploy [staging]

on:
  push:
    branches:
      - ec-dev
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 363611146132.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: ec-private-gpt
  ECS_SERVICE: ec-private-gpt-staging-service
  ECS_CLUSTER: ec-private-gpt-staging
  ECS_TASK_DEFINITION: .aws/ecs-task-definition-staging.json
  CONTAINER_NAME: ec-private-gpt
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Clone the repository
        uses: actions/checkout@v4

      - name: Set up QEMU to be able to build against multi-platforms
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx to build multi-platform images
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push multi-platform image to Amazon ECR
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.external
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: PGPT_PROFILES=staging
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Clone the repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: render-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        env:
          IMAGE_TAG: ${{ github.sha }}
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-definition.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
